{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ok-weather-app\\\\src\\\\components\\\\DisplayWeather.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayWeather(props) {\n  const {\n    data\n  } = props;\n  console.log(data);\n  const iconUrl = `http://openweathermap.org/img/wn/${data.cod !== 404 ? data.weather[0].icon : null}.png`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.cod !== 404 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [data.name, \",\", data.sys.country, \". Weather\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [new Date().toLocaleDateString(), \" - \", new Date().toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [Math.floor(data.main.temp - 273.15), /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this), \"C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: iconUrl,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }, this), \"Main: \", data.weather[0].main, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), \"Description: \", data.weather[0].description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), \"Humidity: \", data.main.humidity, \" %\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), \"Pressure: \", data.main.pressure, \" hPa\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), \"Visibility: \", data.visibility / 1000, \" Km\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), \"Wind: \", data.wind.speed * 18 / 5, \" Km/hr\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), \"Wind Direction: \", data.wind.deg, \" \", /*#__PURE__*/_jsxDEV(\"sup\", {\n            children: \"o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 65\n          }, this), \" deg\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), \"Sunrise: \", new Date(data.sys.sunrise * 1000).toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this), \"Sunset: \", new Date(data.sys.sunset * 1000).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DisplayWeather;\nexport default DisplayWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayWeather\");","map":{"version":3,"names":["React","DisplayWeather","props","data","console","log","iconUrl","cod","weather","icon","name","sys","country","Date","toLocaleDateString","toLocaleTimeString","Math","floor","main","temp","description","humidity","pressure","visibility","wind","speed","deg","sunrise","sunset","message"],"sources":["C:/xampp/htdocs/ok-weather-app/src/components/DisplayWeather.js"],"sourcesContent":["import React from 'react'\r\n\r\nfunction DisplayWeather(props) {\r\n    const { data } = props;\r\n    console.log(data);\r\n    const iconUrl = `http://openweathermap.org/img/wn/${data.cod !== 404 ? data.weather[0].icon : null}.png`;\r\n    return (\r\n        <div>\r\n            {\r\n                data.cod !== 404 ?\r\n                    <React.Fragment>\r\n                        <div>\r\n                            <span>\r\n                                {data.name},{data.sys.country}. Weather\r\n                            </span>\r\n                            <br />\r\n                            <span>\r\n                                {new Date().toLocaleDateString()} - {new Date().toLocaleTimeString()}\r\n                            </span>\r\n                            <br />\r\n                            <h1>\r\n                                {Math.floor(data.main.temp - 273.15)}\r\n                                <sup>o</sup>C\r\n                            </h1>\r\n                            <span>\r\n                                <img src={iconUrl} alt=\"\" />\r\n                                <br />\r\n                                Main: {data.weather[0].main}\r\n                                <br />\r\n                                Description: {data.weather[0].description}\r\n                                <br />\r\n                                Humidity: {data.main.humidity} %\r\n                                <br />\r\n                                Pressure: {data.main.pressure} hPa\r\n                                <br />\r\n                                Visibility: {data.visibility / 1000} Km\r\n                                <br />\r\n                                Wind: {(data.wind.speed * 18) / 5} Km/hr\r\n                                <br />\r\n                                Wind Direction: {data.wind.deg} <sup>o</sup> deg\r\n                                <br />\r\n                                Sunrise: {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\r\n                                <br />\r\n                                Sunset: {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\r\n                            </span>\r\n                        </div>\r\n                    </React.Fragment>\r\n\r\n\r\n\r\n                    :\r\n                    <div>\r\n                        <h2>\r\n                            {data.message}\r\n                        </h2>\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayWeather"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAC3B,MAAM;IAAEC;EAAF,IAAWD,KAAjB;EACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,OAAO,GAAI,oCAAmCH,IAAI,CAACI,GAAL,KAAa,GAAb,GAAmBJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,IAAnC,GAA0C,IAAK,MAAnG;EACA,oBACI;IAAA,UAEQN,IAAI,CAACI,GAAL,KAAa,GAAb,gBACI,QAAC,KAAD,CAAO,QAAP;MAAA,uBACI;QAAA,wBACI;UAAA,WACKJ,IAAI,CAACO,IADV,OACiBP,IAAI,CAACQ,GAAL,CAASC,OAD1B;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAII;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAA,WACK,IAAIC,IAAJ,GAAWC,kBAAX,EADL,SACyC,IAAID,IAAJ,GAAWE,kBAAX,EADzC;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI;UAAA;UAAA;UAAA;QAAA,QARJ,eASI;UAAA,WACKC,IAAI,CAACC,KAAL,CAAWd,IAAI,CAACe,IAAL,CAAUC,IAAV,GAAiB,MAA5B,CADL,eAEI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ,eAaI;UAAA,wBACI;YAAK,GAAG,EAAEb,OAAV;YAAmB,GAAG,EAAC;UAAvB;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA;YAAA;YAAA;UAAA,QAFJ,YAGWH,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBU,IAH3B,eAII;YAAA;YAAA;YAAA;UAAA,QAJJ,mBAKkBf,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBY,WALlC,eAMI;YAAA;YAAA;YAAA;UAAA,QANJ,gBAOejB,IAAI,CAACe,IAAL,CAAUG,QAPzB,qBAQI;YAAA;YAAA;YAAA;UAAA,QARJ,gBASelB,IAAI,CAACe,IAAL,CAAUI,QATzB,uBAUI;YAAA;YAAA;YAAA;UAAA,QAVJ,kBAWiBnB,IAAI,CAACoB,UAAL,GAAkB,IAXnC,sBAYI;YAAA;YAAA;YAAA;UAAA,QAZJ,YAaYpB,IAAI,CAACqB,IAAL,CAAUC,KAAV,GAAkB,EAAnB,GAAyB,CAbpC,yBAcI;YAAA;YAAA;YAAA;UAAA,QAdJ,sBAeqBtB,IAAI,CAACqB,IAAL,CAAUE,GAf/B,oBAeoC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAfpC,uBAgBI;YAAA;YAAA;YAAA;UAAA,QAhBJ,eAiBc,IAAIb,IAAJ,CAASV,IAAI,CAACQ,GAAL,CAASgB,OAAT,GAAmB,IAA5B,EAAkCZ,kBAAlC,EAjBd,eAkBI;YAAA;YAAA;YAAA;UAAA,QAlBJ,cAmBa,IAAIF,IAAJ,CAASV,IAAI,CAACQ,GAAL,CAASiB,MAAT,GAAkB,IAA3B,EAAiCb,kBAAjC,EAnBb;QAAA;UAAA;UAAA;UAAA;QAAA,QAbJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,gBA0CI;MAAA,uBACI;QAAA,UACKZ,IAAI,CAAC0B;MADV;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EA5CZ;IAAA;IAAA;IAAA;EAAA,QADJ;AAqDH;;KAzDQ5B,c;AA2DT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}