{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ok-weather-app\\\\src\\\\context\\\\WeatherContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport JsonCity from \"../data/cities.json\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  id: 16,\n  latitude: \"40.2669\",\n  longitude: \"29.0634\",\n  name: \"Bursa\",\n  population: 2842547,\n  region: \"Marmara\"\n};\nconst api = {\n  key: process.env.REACT_APP_API_KEY,\n  base: process.env.REACT_APP_API_BASE\n};\nconst WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState(initialValue);\n  const [oneCity, setOneCity] = useState([]);\n  const [isDark, setIsDark] = useState(localStorage.getItem(\"isDark\") || \"\");\n  useEffect(() => {\n    const getWeatherData = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${api.base}onecall?lat=${city.latitude}&lon=${city.longitude}&units=metric&appid=${api.key}`);\n        setWeatherData(data.daily);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    const getOneCity = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${api.base}weather?lat=${city.latitude}&lon=${city.longitude}&units=metric&appid=${api.key}`);\n        setOneCity(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getWeatherData();\n    getOneCity();\n    localStorage.setItem(\"isDark\", isDark);\n  }, [city, isDark]);\n  const days = {\n    short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    long: [\"Sunday\", \"Monday\", \"Tuesday \", \"Wednesday \", \"Thursday \", \"Friday \", \"Saturday \"]\n  };\n  const values = {\n    weatherData,\n    setWeatherData,\n    city,\n    setCity,\n    days,\n    JsonCity,\n    oneCity,\n    setOneCity,\n    isDark,\n    setIsDark\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherProvider, \"b3jXK5yPgWfkVOD2WAgiS/p/2pI=\");\n\n_c = WeatherProvider;\nexport const useWeather = () => {\n  _s2();\n\n  return useContext(WeatherContext);\n};\n\n_s2(useWeather, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["JsonCity","createContext","useContext","useEffect","useState","axios","initialValue","id","latitude","longitude","name","population","region","api","key","process","env","REACT_APP_API_KEY","base","REACT_APP_API_BASE","WeatherContext","WeatherProvider","children","weatherData","setWeatherData","city","setCity","oneCity","setOneCity","isDark","setIsDark","localStorage","getItem","getWeatherData","data","get","daily","error","console","log","message","getOneCity","setItem","days","short","long","values","useWeather"],"sources":["C:/xampp/htdocs/ok-weather-app/src/context/WeatherContext.js"],"sourcesContent":["import JsonCity from \"../data/cities.json\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst initialValue = {\n  id: 16,\n  latitude: \"40.2669\",\n  longitude: \"29.0634\",\n  name: \"Bursa\",\n  population: 2842547,\n  region: \"Marmara\"\n};\nconst api = {\n  key: process.env.REACT_APP_API_KEY,\n  base: process.env.REACT_APP_API_BASE\n};\nconst WeatherContext = createContext();\nexport const WeatherProvider = ({ children }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState(initialValue);\n  const [oneCity, setOneCity] = useState([]);\n  const [isDark, setIsDark] = useState(localStorage.getItem(\"isDark\") || \"\");\n  useEffect(() => {\n    const getWeatherData = async () => {\n      try {\n        const { data } = await axios.get(\n          `${api.base}onecall?lat=${city.latitude}&lon=${city.longitude}&units=metric&appid=${api.key}`\n        );\n        setWeatherData(data.daily);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    const getOneCity = async () => {\n      try {\n        const { data } = await axios.get(\n          `${api.base}weather?lat=${city.latitude}&lon=${city.longitude}&units=metric&appid=${api.key}`\n        );\n        setOneCity(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getWeatherData();\n    getOneCity();\n    localStorage.setItem(\"isDark\", isDark);\n  }, [city, isDark]);\n\n  const days = {\n    short: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    long: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday \",\n      \"Wednesday \",\n      \"Thursday \",\n      \"Friday \",\n      \"Saturday \"\n    ]\n  };\n  const values = {\n    weatherData,\n    setWeatherData,\n    city,\n    setCity,\n    days,\n    JsonCity,\n    oneCity,\n    setOneCity,\n    isDark,\n    setIsDark\n  };\n\n  return (\n    <WeatherContext.Provider value={values}>{children}</WeatherContext.Provider>\n  );\n};\n\nexport const useWeather = () => useContext(WeatherContext);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}