{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ok-weather-app\\\\src\\\\components\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport DisplayWeather from './DisplayWeather';\nimport \"./weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  /* */\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  console.log(location);\n  /* */\n\n  const APIKEY = \"04c8214c779f00c5abe7841b3f816209\";\n  const [form, setForm] = useState({\n    city: \"\",\n    country: \"\"\n  });\n  const [weather, setWeather] = useState([]);\n\n  async function weatherData(e) {\n    e.preventDefault();\n\n    if (form.city === \"\") {\n      alert(\"Add Values\");\n    } else {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&appid=${APIKEY}`).then(res => res.json()).then(data => data);\n      setWeather({\n        data: data\n      });\n    }\n  }\n\n  const handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    if (name === \"city\") {\n      setForm({ ...form,\n        city: value\n      });\n    }\n\n    if (name === \"country\") {\n      setForm({ ...form,\n        country: value\n      });\n    }\n\n    console.log(form.city, form.country);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"city\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"country\",\n        placeholder: \"country\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"getweather\",\n        onClick: e => weatherData(e),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), weather.data !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DisplayWeather, {\n        data: weather.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"jPbLmE3l/Fehzxeo8+3XuFufjf4=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useState","useEffect","DisplayWeather","Weather","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","navigator","code","message","geolocation","getCurrentPosition","console","log","APIKEY","form","setForm","city","country","weather","setWeather","weatherData","e","preventDefault","alert","data","fetch","then","res","json","handleChange","name","target","value","undefined"],"sources":["C:/xampp/htdocs/ok-weather-app/src/components/Weather.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport DisplayWeather from './DisplayWeather';\r\nimport \"./weather.css\"\r\n\r\nfunction Weather() {\r\n    /* */\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: {\r\n            lat: \"\",\r\n            lng: \"\"\r\n        }\r\n    });\r\n    const onSuccess = location => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude\r\n            }\r\n        });\r\n    }\r\n    const onError = error => {\r\n        setLocation({\r\n            loaded: true,\r\n            error\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (!(\"geolocation\" in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: \"Geolocation not supported\"\r\n            });\r\n        }\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, [])\r\n    console.log(location);\r\n    /* */\r\n    const APIKEY = \"04c8214c779f00c5abe7841b3f816209\";\r\n    const [form, setForm] = useState({\r\n        city: \"\",\r\n        country: \"\"\r\n    });\r\n    const [weather, setWeather] = useState([]);\r\n    async function weatherData(e) {\r\n        e.preventDefault();\r\n        if (form.city === \"\") {\r\n            alert(\"Add Values\");\r\n        } else {\r\n            const data = await fetch(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${form.city},${form.country}&appid=${APIKEY}`\r\n            )\r\n                .then((res) => res.json())\r\n                .then(data => data);\r\n\r\n            setWeather(\r\n                {\r\n                    data: data\r\n                }\r\n            );\r\n        }\r\n    }\r\n    const handleChange = (e) => {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        if (name === \"city\") {\r\n            setForm({ ...form, city: value })\r\n        }\r\n        if (name === \"country\") {\r\n            setForm({ ...form, country: value })\r\n        }\r\n        console.log(form.city, form.country);\r\n    }\r\n    return (\r\n        <div className='weather'>\r\n            <span className='title'>Weather App</span>\r\n            <br />\r\n            <form>\r\n                <input type=\"text\" name='city' placeholder='city' onChange={e => handleChange(e)} />\r\n                <input type=\"text\" name='country' placeholder='country' onChange={e => handleChange(e)} />\r\n                <button className='getweather' onClick={(e) => weatherData(e)}>Get</button>\r\n            </form>\r\n            {\r\n                weather.data !== undefined ?\r\n\r\n                    <div>\r\n                        <DisplayWeather data={weather.data}></DisplayWeather>\r\n                    </div>\r\n\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather"],"mappings":"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"},"metadata":{},"sourceType":"module"}