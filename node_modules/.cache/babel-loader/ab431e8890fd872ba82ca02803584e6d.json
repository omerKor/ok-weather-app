{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ok-weather-app\\\\src\\\\context\\\\WeatherContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport citiesJSON from \"../data/cities.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherContext = /*#__PURE__*/createContext();\n\nconst WeatherProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState(citiesJSON[34]);\n  useEffect(() => {\n    WeatherApi();\n  }, [city]);\n\n  const WeatherApi = async () => {\n    const url = \"https://api.openweathermap.org/data/2.5/\";\n    const key = \"04c8214c779f00c5abe7841b3f816209\";\n    const {\n      data\n    } = await axios.get(`${url}onecall?lat=${city.latitude}&lon=${city.longitude}&units=metric&exclude=current,minutely,hourly,alerts&lang=tr&appid=${key}`);\n    setWeatherData(data.daily);\n  };\n\n  const days = [\"Pazar\", \"Pazartesi\", \"Salı\", \"Çarşamba\", \"Perşembe\", \"Cuma\", \"Cumartesi\"];\n  const date = new Date();\n  let todayDate = date.toLocaleDateString();\n  let getDay = date.getDay();\n  let day;\n\n  switch (getDay) {\n    case 0:\n      day = \"Pazar\";\n      break;\n\n    case 1:\n      day = \"Pazartesi\";\n      break;\n\n    case 2:\n      day = \"Salı\";\n      break;\n\n    case 3:\n      day = \"Çarşamba\";\n      break;\n\n    case 4:\n      day = \"Perşembe\";\n      break;\n\n    case 5:\n      day = \"Cuma\";\n      break;\n\n    case 6:\n      day = \"Cumartesi\";\n      break;\n\n    default:\n      day = \"\";\n  }\n\n  const values = {\n    city,\n    setCity,\n    citiesJSON,\n    day,\n    days,\n    getDay,\n    todayDate,\n    weatherData,\n    setWeatherData\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherProvider, \"7tL+FfwXB3QbhPtQK9Z2aNyaL7A=\");\n\n_c = WeatherProvider;\n\nconst useWeather = () => {\n  _s2();\n\n  return useContext(WeatherContext);\n};\n\n_s2(useWeather, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { WeatherProvider, useWeather };\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","citiesJSON","WeatherContext","WeatherProvider","children","weatherData","setWeatherData","city","setCity","WeatherApi","url","key","data","get","latitude","longitude","daily","days","date","Date","todayDate","toLocaleDateString","getDay","day","values","useWeather"],"sources":["C:/xampp/htdocs/ok-weather-app/src/context/WeatherContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport citiesJSON from \"../data/cities.json\";\n\nconst WeatherContext = createContext();\n\nconst WeatherProvider = ({ children }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [city, setCity] = useState(citiesJSON[34]);\n\n  useEffect(() => {\n    WeatherApi();\n  }, [city]);\n\n  const WeatherApi = async () => {\n    const url = \"https://api.openweathermap.org/data/2.5/\";\n    const key = \"04c8214c779f00c5abe7841b3f816209\";\n    const { data } = await axios.get(\n      `${url}onecall?lat=${city.latitude}&lon=${city.longitude}&units=metric&exclude=current,minutely,hourly,alerts&lang=tr&appid=${key}`\n    );\n    setWeatherData(data.daily);\n  };\n\n  const days = [\n    \"Pazar\",\n    \"Pazartesi\",\n    \"Salı\",\n    \"Çarşamba\",\n    \"Perşembe\",\n    \"Cuma\",\n    \"Cumartesi\",\n  ];\n\n  const date = new Date();\n  let todayDate = date.toLocaleDateString();\n  let getDay = date.getDay();\n  let day;\n  switch (getDay) {\n    case 0:\n      day = \"Pazar\";\n      break;\n    case 1:\n      day = \"Pazartesi\";\n      break;\n    case 2:\n      day = \"Salı\";\n      break;\n    case 3:\n      day = \"Çarşamba\";\n      break;\n    case 4:\n      day = \"Perşembe\";\n      break;\n    case 5:\n      day = \"Cuma\";\n      break;\n    case 6:\n      day = \"Cumartesi\";\n      break;\n    default:\n      day = \"\";\n  }\n\n  const values = {\n    city,\n    setCity,\n    citiesJSON,\n    day,\n    days,\n    getDay,\n    todayDate,\n    weatherData,\n    setWeatherData,\n  };\n\n  return (\n    <WeatherContext.Provider value={values}>{children}</WeatherContext.Provider>\n  );\n};\n\nconst useWeather = () => useContext(WeatherContext);\n\nexport { WeatherProvider, useWeather };\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,MAAMC,cAAc,gBAAGN,aAAa,EAApC;;AAEA,MAAMO,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACxC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACG,UAAU,CAAC,EAAD,CAAX,CAAhC;EAEAF,SAAS,CAAC,MAAM;IACdU,UAAU;EACX,CAFQ,EAEN,CAACF,IAAD,CAFM,CAAT;;EAIA,MAAME,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,0CAAZ;IACA,MAAMC,GAAG,GAAG,kCAAZ;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMZ,KAAK,CAACa,GAAN,CACpB,GAAEH,GAAI,eAAcH,IAAI,CAACO,QAAS,QAAOP,IAAI,CAACQ,SAAU,sEAAqEJ,GAAI,EAD7G,CAAvB;IAGAL,cAAc,CAACM,IAAI,CAACI,KAAN,CAAd;EACD,CAPD;;EASA,MAAMC,IAAI,GAAG,CACX,OADW,EAEX,WAFW,EAGX,MAHW,EAIX,UAJW,EAKX,UALW,EAMX,MANW,EAOX,WAPW,CAAb;EAUA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;EACA,IAAIC,SAAS,GAAGF,IAAI,CAACG,kBAAL,EAAhB;EACA,IAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAL,EAAb;EACA,IAAIC,GAAJ;;EACA,QAAQD,MAAR;IACE,KAAK,CAAL;MACEC,GAAG,GAAG,OAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,WAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,MAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,UAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,UAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,MAAN;MACA;;IACF,KAAK,CAAL;MACEA,GAAG,GAAG,WAAN;MACA;;IACF;MACEA,GAAG,GAAG,EAAN;EAvBJ;;EA0BA,MAAMC,MAAM,GAAG;IACbjB,IADa;IAEbC,OAFa;IAGbP,UAHa;IAIbsB,GAJa;IAKbN,IALa;IAMbK,MANa;IAObF,SAPa;IAQbf,WARa;IASbC;EATa,CAAf;EAYA,oBACE,QAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAEkB,MAAhC;IAAA,UAAyCpB;EAAzC;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAxED;;GAAMD,e;;KAAAA,e;;AA0EN,MAAMsB,UAAU,GAAG;EAAA;;EAAA,OAAM5B,UAAU,CAACK,cAAD,CAAhB;AAAA,CAAnB;;IAAMuB,U;;AAEN,SAAStB,eAAT,EAA0BsB,UAA1B"},"metadata":{},"sourceType":"module"}